version: "3.1"
networks:
  net:
    driver: bridge
services:
  checkout:
    image: checkout
    build: ./checkout/
    ports:
      - "50051:50051"
      - "8081:8081"
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
    depends_on:
      - pgbouncer-checkout
      - jaeger
    networks:
      - net
  # database for checkout
  postgres-checkout:
    image: postgres:15.1
    environment:
      POSTGRES_DB: checkout
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    container_name: "postgres-checkout"
    volumes:
      - ./checkout/:/var/lib/postgresql/data
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d checkout"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 4G
    networks:
      - net
  #bouncer for checkout
  pgbouncer-checkout:
    image: edoburu/pgbouncer
    environment:
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=postgres-checkout
      - DB_NAME=checkout
      - POOL_MODE=session
      - ADMIN_USERS=postgres,user
      - AUTH_TYPE=plain
    ports:
      - "5436:5432"
    depends_on:
      - postgres-checkout
    networks:
      - net
  
  #########################################

  #service loms
  loms:
    image: loms
    build: ./loms/
    ports:
      - "50052:50052"
      - "8082:8082"
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
    depends_on:
      - pgbouncer-loms
      - jaeger
    networks:
      - net
  # database for loms
  postgres-loms:
    image: postgres:15.1
    environment:
      POSTGRES_DB: loms
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    container_name: "postgres-loms"
    volumes:
      - ./loms/:/var/lib/postgresql/data
    ports:
      - 5434:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d loms"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 4G
    networks:
      - net
  #bouncer for loms
  pgbouncer-loms:
    image: edoburu/pgbouncer
    environment:
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=postgres-loms
      - DB_NAME=loms
      - POOL_MODE=session
      - ADMIN_USERS=postgres,user
      - AUTH_TYPE=plain
    ports:
      - "5435:5432"
    depends_on:
      - postgres-loms
    networks:
      - net
  notifications:
     image: notifications
     build: ./notifications/
     networks:
       - net
#   ports:
  #     - "8082:8082"


  # kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zookeeper:2888:3888
    networks:
      - net
  kafka1:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    restart: on-failure
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka1:29091,LISTENER_EXT://0.0.0.0:9091
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka1:29091,LISTENER_EXT://localhost:9091
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - ZOOKEEPER=zookeeper:2181
    networks:
      - net
  kafka2:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    restart: on-failure
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka2:29092,LISTENER_EXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka2:29092,LISTENER_EXT://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=2
      - ZOOKEEPER=zookeeper:2181
    networks:
      - net
  kafka3:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    restart: on-failure
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka3:29093,LISTENER_EXT://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka3:29093,LISTENER_EXT://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=3
      - ZOOKEEPER=zookeeper:2181
    networks:
      - net
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
    networks:
      - net
#    extra_hosts:
#     - host.docker.internal:host-gateway
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    hostname: alertmanager
    restart: always
    ports:
      - 9095:9093
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    networks:
      - net
  grafana:
    image: grafana/grafana-oss
    ports:
      - 3001:3000
    volumes:
      - ./data:/var/lib/grafana
    links:
      - prometheus
    networks:
      - net
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 14269:14269
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686 # web
      - 14268:14268
      - 9411:9411
    networks:
      - net